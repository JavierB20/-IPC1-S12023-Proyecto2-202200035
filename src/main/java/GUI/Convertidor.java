/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Class.Categoria;
import Class.VariablesGlobales;
import Estructuras.ListaDoble;
import Handlers.BMPtoJPEGImage;
import Handlers.JPEGHandler;
import Handlers.JPEGImageCopy;
import Handlers.JPEGImageHandlerBN;
import Handlers.JPEGImageHandlerColors;
import Handlers.JPEGImageHandlerRotator;
import Handlers.JPEGtoBMPImage;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.LinkedList;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Javier
 */
public class Convertidor extends javax.swing.JFrame {

    /**
     * Creates new form Convertidor
     */
    public Convertidor() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Convertidor");
        
        //Mostrar los usuarios
        if(VariablesGlobales.listaSimple != null) {
            String nombresUsuarios = VariablesGlobales.listaSimple.recorrerLista();
            String[] nombresArray = nombresUsuarios.split(", ");
            for (String nombre : nombresArray) {
                cbUsuario.addItem(nombre);
            }
        }
        //Mostrar las categorias segun el usuario
        cbUsuario.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    // Borrar todos los elementos del JComboBox
                    cbCategoria.removeAllItems();

                    String elementoSeleccionado = (String) e.getItem();
                    cbCategoria.addItem("-- Seleccione Categoria --");
                    for (Categoria c : VariablesGlobales.categorias) {
                        if (c.getUsuario().equals(elementoSeleccionado)) {
                            cbCategoria.addItem(c.getCategoria());
                        }
                    }
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbUsuario = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstImagen = new javax.swing.JList<>();
        rbConvertir = new javax.swing.JRadioButton();
        rbCopia = new javax.swing.JRadioButton();
        rbRVAS = new javax.swing.JRadioButton();
        rbModificarImagen = new javax.swing.JRadioButton();
        rbBN = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        btnEjecutarParalelo = new javax.swing.JButton();
        pbCantidadProcesada = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        bntSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(28, 83, 131));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Usuario");

        cbUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Seleccione Usuariuo --" }));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Categoria");

        cbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoriaActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cola de procesamiento");

        jScrollPane1.setViewportView(lstImagen);

        rbConvertir.setBackground(new java.awt.Color(28, 83, 131));
        rbConvertir.setForeground(new java.awt.Color(255, 255, 255));
        rbConvertir.setText("JPEG a BMP y viceversa");
        rbConvertir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        rbCopia.setBackground(new java.awt.Color(28, 83, 131));
        rbCopia.setForeground(new java.awt.Color(255, 255, 255));
        rbCopia.setText("copia a JPEG");
        rbCopia.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        rbRVAS.setBackground(new java.awt.Color(28, 83, 131));
        rbRVAS.setForeground(new java.awt.Color(255, 255, 255));
        rbRVAS.setText("Rojo Verde Azul Sepia");
        rbRVAS.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        rbRVAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRVASActionPerformed(evt);
            }
        });

        rbModificarImagen.setBackground(new java.awt.Color(28, 83, 131));
        rbModificarImagen.setForeground(new java.awt.Color(255, 255, 255));
        rbModificarImagen.setText("Modifcar Imagen");
        rbModificarImagen.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        rbBN.setBackground(new java.awt.Color(28, 83, 131));
        rbBN.setForeground(new java.awt.Color(255, 255, 255));
        rbBN.setText("Blanco y negro");
        rbBN.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        rbBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBNActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(205, 167, 250));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnEjecutarParalelo.setText("Ejecutar en paralelo");
        btnEjecutarParalelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarParaleloActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cantidad Procesada");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Consola de ejecuci√≥n");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 74, Short.MAX_VALUE)
        );

        bntSalir.setText("Salir");
        bntSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rbConvertir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rbCopia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rbRVAS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rbModificarImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rbBN, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnEjecutarParalelo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pbCantidadProcesada, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(bntSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(287, 287, 287)
                                .addComponent(jLabel5)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(292, 292, 292))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbUsuario)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAgregar)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(rbConvertir)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbCopia)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbRVAS)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbModificarImagen)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbBN))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(btnEjecutarParalelo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(29, 29, 29)
                        .addComponent(pbCantidadProcesada, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bntSalir)
                                .addGap(15, 15, 15))))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbRVASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRVASActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbRVASActionPerformed

    private void rbBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbBNActionPerformed

    private void cbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCategoriaActionPerformed

    private void bntSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalirActionPerformed
        VentanaPrincipal ventana = new VentanaPrincipal();
        ventana.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_bntSalirActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String usuario = (String) cbUsuario.getSelectedItem();
        String categoria = (String) cbCategoria.getSelectedItem();

        if (usuario == null && categoria == null) {
            JOptionPane.showMessageDialog(null, "Seleccione un usuario y una categor√≠a para agregar las imagenes.");
        } 
        else {
            ListaDoble listaDoble = new ListaDoble();
            DefaultListModel<String> modeloLista = new DefaultListModel<>();
            for (int i = 0; i < VariablesGlobales.categorias.size(); i++) {
                Categoria c = VariablesGlobales.categorias.get(i);
                if (c.getCategoria().equals(categoria) && c.getUsuario().equals(usuario)) {
                    if(c.getListaDoble() != null) {
                        listaDoble = c.getListaDoble();

                        String nombresImagenes = VariablesGlobales.listaDoble.recorrerLista();
                        String[] nombresArray = nombresImagenes.split(", ");
                        for (String nombre : nombresArray) {
                            modeloLista.addElement(nombre);
                        }
                        lstImagen.setModel(modeloLista);
                        //Codigo Provisional
                        VariablesGlobales.listaDoble = listaDoble;
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "La categoria " + categoria + " del usuario " + usuario +" no contiene imagenes!!");
                    }
                }
            }
            // La l√≠nea break; se mueve aqu√≠, despu√©s del ciclo for
           // break;  
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEjecutarParaleloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarParaleloActionPerformed
        LinkedList<Thread> hilos = new LinkedList<>();
        LinkedList<Future<?>> futures = new LinkedList<>();


        //pbCantidadProcesada.setValue(50);


        if (rbConvertir.isSelected()) {
            Thread hilo1 = new Thread(new Runnable() {
                @Override
                public void run() {
                    for (String url : VariablesGlobales.lstImagenesUrl) {
                        String extension = url.substring(url.lastIndexOf(".") + 1);
                        if(extension.equals("jpg")) {
                            JPEGtoBMPImage handlerBMP = new JPEGtoBMPImage(url);
                            try{
                                JPEGHandler.runHandler(handlerBMP);
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            } 
                        }
                        else if(extension.equals("bmp")) {
                            BMPtoJPEGImage handlerJPG = new BMPtoJPEGImage(url);
                            try{
                                JPEGHandler.runHandler(handlerJPG);
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            } 
                        }
                        else {
                            JOptionPane.showMessageDialog(null, "El formato de la imagen no es valido");
                        }
                    }
                }
            });
            hilos.add(hilo1);
        }

        if (rbCopia.isSelected()) {
            Thread hilo2 = new Thread(new Runnable() {
                @Override
                public void run() {
                    for (String url : VariablesGlobales.lstImagenesUrl) {
                        JPEGImageCopy handlerBN = new JPEGImageCopy(url);
                        try{
                            JPEGHandler.runHandler(handlerBN);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            });
            hilos.add(hilo2);
        }

            if (rbRVAS.isSelected()) {
            Thread hilo3 = new Thread(new Runnable() {
                @Override
                public void run() {
                    for (String url : VariablesGlobales.lstImagenesUrl) {
                        JPEGImageHandlerColors handlerBN = new JPEGImageHandlerColors(url);
                        try{
                            JPEGHandler.runHandler(handlerBN);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            });
            hilos.add(hilo3);
        }

        if (rbModificarImagen.isSelected()) {
            Thread hilo4 = new Thread(new Runnable() {
                @Override
                public void run() {
                    for (String url : VariablesGlobales.lstImagenesUrl) {
                        JPEGImageHandlerRotator handlerBN = new JPEGImageHandlerRotator(url);
                        try{
                            JPEGHandler.runHandler(handlerBN);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            });
            hilos.add(hilo4);
        }

        if (rbBN.isSelected()) {
            Thread hilo5 = new Thread(new Runnable() {
                @Override
                public void run() {
                    for (String url : VariablesGlobales.lstImagenesUrl) {
                        JPEGImageHandlerBN handlerBN = new JPEGImageHandlerBN(url);
                        try{
                            JPEGHandler.runHandler(handlerBN);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            });
            hilos.add(hilo5);
        }

    //    for (Thread hilo : hilos) {
    //        hilo.start();
    //    }

        ExecutorService executor = Executors.newFixedThreadPool(hilos.size());

        for (Thread hilo : hilos) {
            Future<?> future = executor.submit(hilo);
            futures.add(future);
        }

        // Esperar a que los hilos terminen y actualizar el progreso...
        executor.shutdown();

    }//GEN-LAST:event_btnEjecutarParaleloActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Convertidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSalir;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEjecutarParalelo;
    private javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JComboBox<String> cbUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstImagen;
    private javax.swing.JProgressBar pbCantidadProcesada;
    private javax.swing.JRadioButton rbBN;
    private javax.swing.JRadioButton rbConvertir;
    private javax.swing.JRadioButton rbCopia;
    private javax.swing.JRadioButton rbModificarImagen;
    private javax.swing.JRadioButton rbRVAS;
    // End of variables declaration//GEN-END:variables
}
